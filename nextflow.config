manifest {
    author = "Andrew Ndhlovu"
    description = "A nextflow pipeline for in silico assessment of metabarcoding primers"
    homePage =	"https://github.com/PiscatorX/piscator-pipeline"
    mainScript = "piscator.nf"
    name = "Piscator" 
    nextflowVersion = "19.01.0"
}



process{
   container = 'piscator'
   
}


params{

    dockerIP = getdockerIP()
    
}


def getdockerIP() {


def getIP_cmd = "docker inspect mysql_piscator -f '{{.NetworkSettings.Networks.piscatorpipeline_default.IPAddress}}'"
def stdout = new StringBuffer()
def stderr = new StringBuffer()
String docker_IP = 'None'

try{
    def process = getIP_cmd.execute()
    process.consumeProcessOutput(stdout, stderr)
    process.waitForProcessOutput()
    docker_IP  = stdout.toString().trim()
    if (stdout) {
	String[] parts = docker_IP.split("\\.");
	if (parts.length != 4){
            docker_IP = 'None'
	}
    }
}
catch (IOException e1){}

return docker_IP
    
}
    
    


getdockerIP()

